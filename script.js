document.addEventListener('DOMContentLoaded', function () {
    // Mobile menu toggle
    const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
    const navLinks = document.querySelector('.nav-links');

    mobileMenuBtn.addEventListener('click', function () {
        navLinks.classList.toggle('active');
        this.innerHTML = navLinks.classList.contains('active') ?
            '<i class="fas fa-times"></i>' : '<i class="fas fa-bars"></i>';
    });

    // Smooth scrolling for navigation links
    document.querySelectorAll('.nav-links a').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();

            // Close mobile menu if open
            if (navLinks.classList.contains('active')) {
                navLinks.classList.remove('active');
                mobileMenuBtn.innerHTML = '<i class="fas fa-bars"></i>';
            }

            const targetId = this.getAttribute('href');
            const targetElement = document.querySelector(targetId);

            window.scrollTo({
                top: targetElement.offsetTop - 80,
                behavior: 'smooth'
            });
        });
    });

    // Testimonials carousel
    const carousel = document.querySelector('.testimonials-carousel');
    const inner = carousel.querySelector('.carousel-inner');
    const items = carousel.querySelectorAll('.carousel-item');
    const prevBtn = carousel.querySelector('.prev');
    const nextBtn = carousel.querySelector('.next');
    const indicators = carousel.querySelectorAll('.indicator');

    let currentIndex = 0;
    const itemCount = items.length;

    function updateCarousel() {
        inner.style.transform = `translateX(-${currentIndex * 100}%)`;

        // Update indicators
        indicators.forEach((indicator, index) => {
            indicator.classList.toggle('active', index === currentIndex);
        });
    }

    function nextSlide() {
        currentIndex = (currentIndex + 1) % itemCount;
        updateCarousel();
    }

    function prevSlide() {
        currentIndex = (currentIndex - 1 + itemCount) % itemCount;
        updateCarousel();
    }

    nextBtn.addEventListener('click', nextSlide);
    prevBtn.addEventListener('click', prevSlide);

    // Add click events to indicators
    indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => {
            currentIndex = index;
            updateCarousel();
        });
    });

    // Auto-rotate carousel
    let carouselInterval = setInterval(nextSlide, 5000);

    carousel.addEventListener('mouseenter', () => {
        clearInterval(carouselInterval);
    });

    carousel.addEventListener('mouseleave', () => {
        carouselInterval = setInterval(nextSlide, 5000);
    });

    // Touch events for mobile
    let touchStartX = 0;
    let touchEndX = 0;

    carousel.addEventListener('touchstart', (e) => {
        touchStartX = e.changedTouches[0].screenX;
    }, { passive: true });

    carousel.addEventListener('touchend', (e) => {
        touchEndX = e.changedTouches[0].screenX;
        handleSwipe();
    }, { passive: true });

    function handleSwipe() {
        const threshold = 50;
        if (touchEndX < touchStartX - threshold) {
            nextSlide();
        } else if (touchEndX > touchStartX + threshold) {
            prevSlide();
        }
    }

    // Sticky header on scroll
    const header = document.querySelector('.top-nav');
    let lastScroll = 0;

    window.addEventListener('scroll', function () {
        const currentScroll = window.pageYOffset;

        if (currentScroll <= 0) {
            header.classList.remove('scroll-up');
            return;
        }

        if (currentScroll > lastScroll && !header.classList.contains('scroll-down')) {
            header.classList.remove('scroll-up');
            header.classList.add('scroll-down');
        } else if (currentScroll < lastScroll && header.classList.contains('scroll-down')) {
            header.classList.remove('scroll-down');
            header.classList.add('scroll-up');
        }

        lastScroll = currentScroll;
    });

    // Animation on scroll
    const animateElements = document.querySelectorAll('.feature-card, .process-step, .section-title, .gallery-item, .pricing-card');

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate');
                observer.unobserve(entry.target);
            }
        });
    }, { threshold: 0.1 });

    animateElements.forEach(el => {
        observer.observe(el);
    });
});
// –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
document.getElementById('userPhone').addEventListener('input', function (e) {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    let digits = this.value.replace(/\D/g, '');

    // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ +7
    if (digits.length > 1 && digits.startsWith('7')) {
        digits = '7' + digits.substring(1).replace(/7/g, '');
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä
    let formatted = '+7';
    if (digits.length > 1) {
        formatted += '(' + digits.substring(1, 4);
    }
    if (digits.length > 4) {
        formatted += ')' + digits.substring(4, 7);
    }
    if (digits.length > 7) {
        formatted += '-' + digits.substring(7, 9);
    }
    if (digits.length > 9) {
        formatted += '-' + digits.substring(9, 11);
    }

    this.value = formatted;
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è (Backspace)
document.getElementById('userPhone').addEventListener('keydown', function (e) {
    if (e.key === 'Backspace' && this.value === '+7') {
        e.preventDefault(); // –ó–∞–ø—Ä–µ—â–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ +7
    }
});
// –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏ (—Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã)
document.getElementById('userName').addEventListener('input', function (e) {
    this.value = this.value.replace(/[^–ê-–Ø–∞-—è–Å—ëA-Za-z ]/g, '');
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
document.getElementById('telegramForm').addEventListener('submit', function (e) {
    e.preventDefault();

    const formData = {
        name: document.getElementById('userName').value.trim(),
        phone: document.getElementById('userPhone').value.trim(),
        car: document.getElementById('carBrand').value.trim(),
        address: document.getElementById('pickupAddress').value.trim(),
        service: document.getElementById('service').value,
        comment: document.getElementById('comment').value.trim()
    };

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (!formData.name || !formData.phone || !formData.address) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∞–¥—Ä–µ—Å)');
        return;
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `üöó –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –º–æ–π–∫—É:\n\n` +
        `üë§ –ò–º—è: ${formData.name}\n` +
        `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}\n` +
        `üìç –ê–¥—Ä–µ—Å –∑–∞–±–æ—Ä–∞: ${formData.address}\n` +
        (formData.car ? `üöò –ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${formData.car}\n` : '') +
        (formData.service ? `üîß –£—Å–ª—É–≥–∞: ${getServiceName(formData.service)}\n` : '') +
        (formData.comment ? `üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${formData.comment}` : '');

    // –í–∞—à Telegram username (–±–µ–∑ @)
    const telegramUsername = "baslanovm"; // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –°–í–û–ô

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram
    window.open(`https://t.me/${telegramUsername}?text=${encodeURIComponent(message)}`, '_blank');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    document.getElementById('telegramForm').style.display = 'none';
    document.getElementById('successMessage').style.display = 'block';
});

function getServiceName(serviceKey) {
    const services = {
        'basic': '–ë–∞–∑–æ–≤—ã–π –ø–∞–∫–µ—Ç (14 900 ‚ÇΩ)',
        'premium': '–ü—Ä–µ–º–∏—É–º (23 900 ‚ÇΩ)',
        'vip': 'VIP –∫–æ–º–ø–ª–µ–∫—Å (54 900 ‚ÇΩ)'
    };
    return services[serviceKey] || serviceKey;
}

// –†—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –µ—Å–ª–∏ Telegram –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è
document.getElementById('manualLink').addEventListener('click', function (e) {
    e.preventDefault();
    alert('–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ Telegram –∏–ª–∏ Whatsapp: +7 917 772 1010');
});
